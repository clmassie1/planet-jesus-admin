<%= form_for(@podcast, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>
  <% if podcast.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(podcast.errors.count, "error") %> prohibited this podcast from being saved:</h2>

      <ul>
      <% podcast.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :episode_title %>
    <%= f.text_field :episode_title %>
  </div>

  <div class="field">
    <%= f.label :episode_description %>
    <%= f.text_field :episode_description %>
  </div>

  <div class="field">
    <%= f.label :image_url %>
    <%= f.file_field :image_url %>
  </div>

  <div class="field">
    <%= f.label :episode_url %>
    <%= f.file_field :episode_url %>
  </div>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>


<script>
$(function() {
  $('.directUpload').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    var fd           = $(elem);
    fileInput.after(barContainer);
    fileInput.fileupload({ 
      // add: function (e, data) {
      //   fd["Content-Type"] = data.files[0].type;  
      //   data.formData = fd;
      //   console.log(fd["Content-Type"]);
      //   data.submit();
      // }, 
      fileInput:       fileInput,
      url:             form.data('url'),
      type:            'POST',
      autoUpload:       true,
      formData:         form.data('form-data'),
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);
        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");
        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;
        console.log(url);
        
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });
});
</script>
